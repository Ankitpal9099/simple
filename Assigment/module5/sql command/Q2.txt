CREATE TABLE employee (
    ->   Employee_id INT PRIMARY KEY,
    ->   First_name VARCHAR(255),
    ->   Last_name VARCHAR(255),
    ->   Salary INT,
    ->   Joining_date DATE,
    ->   Department VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE incentive (
    ->   Employee_ref_id INT,
    ->   Incentive_date DATE,
    ->   Incentive_amount INT,
    ->   FOREIGN KEY (Employee_ref_id) REFERENCES employee(Employee_id)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> INSERT INTO employee (Employee_id, First_name, Last_name, Salary, Joining_date, Department) VALUES
    -> (1, 'John', 'Abraham', 1000000, '2013-01-01', 'Banking'),
    -> (2, 'Michael', 'Clarke', 800000, '2013-01-01', 'Insurance'),
    -> (3, 'Roy', 'Thomas', 700000, '2013-02-01', 'Banking'),
    -> (4, 'Tom', 'Jose', 600000, '2013-02-01', 'Insurance'),
    -> (5, 'Jerry', 'Pinto', 650000, '2013-02-01', 'Insurance'),
    -> (6, 'Philip', 'Mathew', 750000, '2013-01-01', 'Services'),
    -> (7, 'TestName1', '123', 650000, '2013-01-01', 'Services'),
    -> (8, 'TestName2', 'Lname%', 600000, '2013-02-01', 'Insurance');
Query OK, 8 rows affected (0.06 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from employee;
+-------------+------------+-----------+---------+--------------+------------+
| Employee_id | First_name | Last_name | Salary  | Joining_date | Department |
+-------------+------------+-----------+---------+--------------+------------+
|           1 | John       | Abraham   | 1000000 | 2013-01-01   | Banking    |
|           2 | Michael    | Clarke    |  800000 | 2013-01-01   | Insurance  |
|           3 | Roy        | Thomas    |  700000 | 2013-02-01   | Banking    |
|           4 | Tom        | Jose      |  600000 | 2013-02-01   | Insurance  |
|           5 | Jerry      | Pinto     |  650000 | 2013-02-01   | Insurance  |
|           6 | Philip     | Mathew    |  750000 | 2013-01-01   | Services   |
|           7 | TestName1  | 123       |  650000 | 2013-01-01   | Services   |
|           8 | TestName2  | Lname%    |  600000 | 2013-02-01   | Insurance  |
+-------------+------------+-----------+---------+--------------+------------+
8 rows in set (0.00 sec)
INSERT INTO Incentive (Employee_ref_id, Incentive_date, Incentive_amount) VALUES
    ->   (1, '2013-02-01', 5000),
    ->   (2, '2013-02-01', 3000),
    ->   (3, '2013-02-01', 4000),
    ->   (1, '2013-01-01', 4500),
    ->   (2, '2013-01-01', 3500);
Query OK, 5 rows affected (0.05 sec)
Records: 5  Duplicates: 0  Warnings: 0


mysql> select * from Incentive;
+-----------------+----------------+------------------+
| Employee_ref_id | Incentive_date | Incentive_amount |
+-----------------+----------------+------------------+
|               1 | 2013-02-01     |             5000 |
|               2 | 2013-02-01     |             3000 |
|               3 | 2013-02-01     |             4000 |
|               1 | 2013-01-01     |             4500 |
|               2 | 2013-01-01     |             3500 |
+-----------------+----------------+------------------+
5 rows in set (0.00 sec)

3. Get First_Name from employee table using Tom name “Employee Name”.

SELECT First_Name
    -> FROM employee
    -> WHERE First_Name = 'Tom';
+------------+
| First_Name |
+------------+
| Tom        |
+------------+
4. Get FIRST_NAME, Joining Date, and Salary from employee table.
 SELECT First_Name, Joining_Date, Salary
    -> FROM Employee;
+------------+--------------+---------+
| First_Name | Joining_Date | Salary  |
+------------+--------------+---------+
| John       | 2013-01-01   | 1000000 |
| Michael    | 2013-01-01   |  800000 |
| Roy        | 2013-02-01   |  700000 |
| Tom        | 2013-02-01   |  600000 |
| Jerry      | 2013-02-01   |  650000 |
| Philip     | 2013-01-01   |  750000 |
| TestName1  | 2013-01-01   |  650000 |
| TestName2  | 2013-02-01   |  600000 |
+------------+--------------+---------+
8 rows in set (0.00 sec)
5. Get all employee details from the employee table order by First_NameAscending and Salary descending?
SELECT *
    -> FROM Employee
    -> ORDER BY First_name;
+-------------+------------+-----------+---------+--------------+------------+
| Employee_id | First_name | Last_name | Salary  | Joining_date | Department |
+-------------+------------+-----------+---------+--------------+------------+
|           5 | Jerry      | Pinto     |  650000 | 2013-02-01   | Insurance  |
|           1 | John       | Abraham   | 1000000 | 2013-01-01   | Banking    |
|           2 | Michael    | Clarke    |  800000 | 2013-01-01   | Insurance  |
|           6 | Philip     | Mathew    |  750000 | 2013-01-01   | Services   |
|           3 | Roy        | Thomas    |  700000 | 2013-02-01   | Banking    |
|           7 | TestName1  | 123       |  650000 | 2013-01-01   | Services   |
|           8 | TestName2  | Lname%    |  600000 | 2013-02-01   | Insurance  |
|           4 | Tom        | Jose      |  600000 | 2013-02-01   | Insurance  |
+-------------+------------+-----------+---------+--------------+------------+

6. Get employee details from employee table whose first name contains ‘J’.
SELECT *
    -> FROM Employee
    -> WHERE First_name LIKE '%J%';
+-------------+------------+-----------+---------+--------------+------------+
| Employee_id | First_name | Last_name | Salary  | Joining_date | Department |
+-------------+------------+-----------+---------+--------------+------------+
|           1 | John       | Abraham   | 1000000 | 2013-01-01   | Banking    |
|           5 | Jerry      | Pinto     |  650000 | 2013-02-01   | Insurance  |
+-------------+------------+-----------+---------+--------------+------------+
2 rows in set (0.00 sec)
7. Get department wise maximum salary from employee table order by
SELECT Department, MAX(Salary) AS MaxSalary
    -> FROM Employee
    -> GROUP BY Department
    -> ORDER BY MaxSalary;
+------------+-----------+
| Department | MaxSalary |
+------------+-----------+
| Services   |    750000 |
| Insurance  |    800000 |
| Banking    |   1000000 |
+------------+-----------+
3 rows in set (0.01 sec)
8. salaryascending?
SELECT *
    -> FROM Employee
    -> ORDER BY Salary;
+-------------+------------+-----------+---------+--------------+------------+
| Employee_id | First_name | Last_name | Salary  | Joining_date | Department |
+-------------+------------+-----------+---------+--------------+------------+
|           4 | Tom        | Jose      |  600000 | 2013-02-01   | Insurance  |
|           8 | TestName2  | Lname%    |  600000 | 2013-02-01   | Insurance  |
|           5 | Jerry      | Pinto     |  650000 | 2013-02-01   | Insurance  |
|           7 | TestName1  | 123       |  650000 | 2013-01-01   | Services   |
|           3 | Roy        | Thomas    |  700000 | 2013-02-01   | Banking    |
|           6 | Philip     | Mathew    |  750000 | 2013-01-01   | Services   |
|           2 | Michael    | Clarke    |  800000 | 2013-01-01   | Insurance  |
|           1 | John       | Abraham   | 1000000 | 2013-01-01   | Banking    |
+-------------+------------+-----------+---------+--------------+------------+
8 rows in set (0.00 sec)
9. Select first_name, incentive amount from employee and incentives table forthose employees who have incentives and incentive amount greater than 3000

10. Create After Insert trigger on Employee table which insert records in
viewtable
